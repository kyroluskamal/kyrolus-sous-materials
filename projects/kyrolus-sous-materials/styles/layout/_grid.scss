// =======================================================
// FINAL, SELF-CONTAINED GRID SYSTEM (WITHOUT ALIGNMENT)
// =======================================================

// --- 1. VARIABLES (All variables needed for this file) ---
@use "sass:string";

@use "../abstracts/variables" as *;
$grid-columns: 12;
$grid-rows: 6;

// Values for grid-auto-flow
$grid-flow-values: ("row", "column", "row-dense", "column-dense");

// Values for grid-auto-columns and grid-auto-rows
$grid-auto-columns-values: (
  auto: auto,
  min: min-content,
  max: max-content,
  fr: minmax(0, 1fr)
);
$grid-auto-rows-values: (
  auto: auto,
  min: min-content,
  max: max-content,
  fr: minmax(0, 1fr)
);

// --- 2. RESPONSIVE UTILITY GENERATION (Mobile-First) ---

@each $bp-name, $bp-value in $breakpoints {
  @media (min-width: $bp-value) {
    // grid-template-columns & grid-template-rows
    .grid-cols-#{$bp-name}-none {
      grid-template-columns: none !important;
    }
    @for $i from 1 through $grid-columns {
      .grid-cols-#{$bp-name}-#{$i} {
        grid-template-columns: repeat($i, minmax(0, 1fr)) !important;
      }
    }
    .grid-rows-#{$bp-name}-none {
      grid-template-rows: none !important;
    }
    @for $i from 1 through $grid-rows {
      .grid-rows-#{$bp-name}-#{$i} {
        grid-template-rows: repeat($i, minmax(0, 1fr)) !important;
      }
    }

    // grid-column (span, start, end)
    .col-span-#{$bp-name}-full {
      grid-column: 1 / -1 !important;
    }
    @for $i from 1 through $grid-columns {
      .col-span-#{$bp-name}-#{$i} {
        grid-column: span $i / span $i !important;
      }
      .col-start-#{$bp-name}-#{$i} {
        grid-column-start: $i !important;
      }
      .col-end-#{$bp-name}-#{$i} {
        grid-column-end: $i !important;
      }
    }
    .col-end-#{$bp-name}-auto {
      grid-column-end: auto;
    }
    .col-start-#{$bp-name}-auto {
      grid-column-start: auto;
    }

    // grid-row (span, start, end)
    .row-span-#{$bp-name}-full {
      grid-row: 1 / -1 !important;
    }
    @for $i from 1 through $grid-rows {
      .row-span-#{$bp-name}-#{$i} {
        grid-row: span $i / span $i !important;
      }
      .row-start-#{$bp-name}-#{$i} {
        grid-row-start: $i !important;
      }
      .row-end-#{$bp-name}-#{$i} {
        grid-row-end: $i !important;
      }
    }
    .row-end-#{$bp-name}-auto {
      grid-row-end: auto;
    }
    .row-start-#{$bp-name}-auto {
      grid-row-start: auto;
    }

    // grid-auto-columns & grid-auto-rows
    @each $name, $value in $grid-auto-columns-values {
      .auto-cols-#{$bp-name}-#{$name} {
        grid-auto-columns: $value !important;
      }
    }
    @each $name, $value in $grid-auto-rows-values {
      .auto-rows-#{$bp-name}-#{$name} {
        grid-auto-rows: $value !important;
      }
    }

    // grid-auto-flow
    @each $name in $grid-flow-values {
      .grid-flow-#{$bp-name}-#{$name} {
        grid-auto-flow: string.unquote($name) !important;
      }
    }
  }
}

// --- 3. BASE UTILITY GENERATION (for all screen sizes) ---

// Display
.grid {
  display: grid !important;
}
.inline-grid {
  display: inline-grid !important;
}

// grid-template-*
.grid-cols-none {
  grid-template-columns: none !important;
}
@for $i from 1 through $grid-columns {
  .grid-cols-#{$i} {
    grid-template-columns: repeat($i, minmax(0, 1fr)) !important;
  }
}
.grid-rows-none {
  grid-template-rows: none !important;
}
@for $i from 1 through $grid-rows {
  .grid-rows-#{$i} {
    grid-template-rows: repeat($i, minmax(0, 1fr)) !important;
  }
}

// auto-cols & auto-rows
@each $name, $value in $grid-auto-columns-values {
  .auto-cols-#{$name} {
    grid-auto-columns: $value !important;
  }
}
@each $name, $value in $grid-auto-rows-values {
  .auto-rows-#{$name} {
    grid-auto-rows: $value !important;
  }
}

// col-*
.col-auto {
  grid-column: auto !important;
}
.col-span-full {
  grid-column: 1 / -1 !important;
}
@for $i from 1 through $grid-columns {
  .col-span-#{$i} {
    grid-column: span $i / span $i !important;
  }
  .col-start-#{$i} {
    grid-column-start: $i !important;
  }
  .col-end-#{$i} {
    grid-column-end: $i !important;
  }
}
.col-start-auto {
  grid-column-start: auto;
}
.col-end-auto {
  grid-column-end: auto;
}

// row-*
.row-auto {
  grid-row: auto !important;
}
.row-span-full {
  grid-row: 1 / -1 !important;
}
@for $i from 1 through $grid-rows {
  .row-span-#{$i} {
    grid-row: span $i / span $i !important;
  }
  .row-start-#{$i} {
    grid-row-start: $i !important;
  }
  .row-end-#{$i} {
    grid-row-end: $i !important;
  }
}
.row-start-auto {
  grid-row-start: auto;
}
.row-end-auto {
  grid-row-end: auto;
}

// grid-flow-*
@each $name in $grid-flow-values {
  .grid-flow-#{$name} {
    grid-auto-flow: string.unquote($name) !important;
  }
}
